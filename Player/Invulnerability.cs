using System.Collections;
using UnityEngine;

public class Invulnerability : MonoBehaviour
{

    SpriteRenderer sR;

    [SerializeField]
    GameObject arrow;
    SpriteRenderer arrowSR;
    Color newColor;
    bool invulnerable;

    private void Awake()
    {
        sR = GetComponent<SpriteRenderer>();
        arrowSR = arrow.GetComponent<SpriteRenderer>();
    }

    private void GoInvulnerable(Player player) => StartCoroutine(InvulnerableFrames());

    IEnumerator InvulnerableAnimation()
    {
        sR.color = Color.white;
        arrowSR.color = Color.white;
        newColor = Color.Lerp(Color.white, Color.black, Mathf.PingPong(Time.time * 4, 1f));
        sR.color = newColor;
        arrowSR.color = newColor;
        yield return new WaitForEndOfFrame();
        if (invulnerable)
        {
            StartCoroutine(InvulnerableAnimation());
        }
        else
        {
            sR.color = Color.white;
            arrowSR.color = Color.white;
            yield break;
        }
    }
    IEnumerator InvulnerableFrames()
    {
        gameObject.layer = 8;
        invulnerable = true;
        StartCoroutine(InvulnerableAnimation());
        yield return new WaitForSeconds(2f);
        invulnerable = false;
        SpriteRenderer sR = GetComponent<SpriteRenderer>();
        sR.color = Color.white;
        gameObject.layer = 7;
    }

    void OnEnable() => Player.OnHurt += GoInvulnerable;
    void OnDisable() => Player.OnHurt -= GoInvulnerable;
}
